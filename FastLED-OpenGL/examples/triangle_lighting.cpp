#include "gfx/gfx.hpp"
#include <FastLED.h>
#include <math.h>
#include <unistd.h>

using gfx::LED;
using gfx::Triangle;

std::vector<LED> led_coords =
{
   
   { 5.0, 15.0, -20},
   { 5.3, 14.5, -20},
   { 5.6, 14.0, -20},
   { 5.9, 13.5, -20},
   { 6.2, 13.0, -20},
   { 6.5, 12.5, -20},
   { 6.8, 12.0, -20},
   { 7.1, 11.5, -20},
   { 7.4, 11.0, -20},
   { 7.7, 10.5, -20},
   { 8.0, 10.0, -20},
   { 8.3,  9.5, -20},
   { 8.6,  9.0, -20},
   { 8.9,  8.5, -20},
   { 9.2,  8.0, -20},
   { 9.5,  7.5, -20},
   { 9.8,  7.0, -20},
   {10.1,  6.5, -20},
   {10.4,  6.0, -20},
   {10.7,  5.5, -20},
   {11.0,  5.0, -20},
   {11.3,  4.5, -20},
   {11.6,  4.0, -20},
   {11.9,  3.5, -20},
   {12.2,  3.0, -20},
   {12.5,  2.5, -20},
   {12.8,  2.0, -20},
   {13.1,  1.5, -20},
   {13.4,  1.0, -20},
   {13.7,  0.5, -20},
   {14.0,  0.0, -20},

   {13.4,  0.0, -20},
   {12.8,  0.0, -20},
   {12.2,  0.0, -20},
   {11.6,  0.0, -20},
   {11.0,  0.0, -20},
   {10.4,  0.0, -20},
   { 9.8,  0.0, -20},
   { 9.2,  0.0, -20},
   { 8.6,  0.0, -20},
   { 8.0,  0.0, -20},
   { 7.4,  0.0, -20},
   { 6.8,  0.0, -20},
   { 6.2,  0.0, -20},
   { 5.6,  0.0, -20},
   { 5.0,  0.0, -20},
   { 4.4,  0.0, -20},
   { 3.8,  0.0, -20},
   { 3.2,  0.0, -20},
   { 2.6,  0.0, -20},
   { 2.0,  0.0, -20},
   { 1.4,  0.0, -20},
   { 0.8,  0.0, -20},
   { 0.2,  0.0, -20},
   {-0.4,  0.0, -20},
   {-1.0,  0.0, -20},
   {-1.6,  0.0, -20},
   {-2.2,  0.0, -20},
   {-2.8,  0.0, -20},
   {-3.4,  0.0, -20},

   {-4.0,  0.0, -20},
   {-3.7,  0.5, -20},
   {-3.4,  1.0, -20},
   {-3.1,  1.5, -20},
   {-2.8,  2.0, -20},
   {-2.5,  2.5, -20},
   {-2.2,  3.0, -20},
   {-1.9,  3.5, -20},
   {-1.6,  4.0, -20},
   {-1.3,  4.5, -20},
   {-1.0,  5.0, -20},
   {-0.7,  5.5, -20},
   {-0.4,  6.0, -20},
   {-0.1,  6.5, -20},
   { 0.2,  7.0, -20},
   { 0.5,  7.5, -20},
   { 0.8,  8.0, -20},
   { 1.1,  8.5, -20},
   { 1.4,  9.0, -20},
   { 1.7,  9.5, -20},
   { 2.0, 10.0, -20},
   { 2.3, 10.5, -20},
   { 2.6, 11.0, -20},
   { 2.9, 11.5, -20},
   { 3.2, 12.0, -20},
   { 3.5, 12.5, -20},
   { 3.8, 13.0, -20},
   { 4.1, 13.5, -20},
   { 4.4, 14.0, -20},
   { 4.7, 14.5, -20},
   { 5.0, 15.0, -20},
   
   
   { -5.0,  0.0, -20},
   { -5.3,  0.5, -20},
   { -5.6,  1.0, -20},
   { -5.9,  1.5, -20},
   { -6.2,  2.0, -20},
   { -6.5,  2.5, -20},
   { -6.8,  3.0, -20},
   { -7.1,  3.5, -20},
   { -7.4,  4.0, -20},
   { -7.7,  4.5, -20},
   { -8.0,  5.0, -20},
   { -8.3,  5.5, -20},
   { -8.6,  6.0, -20},
   { -8.9,  6.5, -20},
   { -9.2,  7.0, -20},
   { -9.5,  7.5, -20},
   { -9.8,  8.0, -20},
   {-10.1,  8.5, -20},
   {-10.4,  9.0, -20},
   {-10.7,  9.5, -20},
   {-11.0, 10.0, -20},
   {-11.3, 10.5, -20},
   {-11.6, 11.0, -20},
   {-11.9, 11.5, -20},
   {-12.2, 12.0, -20},
   {-12.5, 12.5, -20},
   {-12.8, 13.0, -20},
   {-13.1, 13.5, -20},
   {-13.4, 14.0, -20},
   {-13.7, 14.5, -20},
   {-14.0, 15.0, -20},

   {-13.4, 15.0, -20},
   {-12.8, 15.0, -20},
   {-12.2, 15.0, -20},
   {-11.6, 15.0, -20},
   {-11.0, 15.0, -20},
   {-10.4, 15.0, -20},
   { -9.8, 15.0, -20},
   { -9.2, 15.0, -20},
   { -8.6, 15.0, -20},
   { -8.0, 15.0, -20},
   { -7.4, 15.0, -20},
   { -6.8, 15.0, -20},
   { -6.2, 15.0, -20},
   { -5.6, 15.0, -20},
   { -5.0, 15.0, -20},
   { -4.4, 15.0, -20},
   { -3.8, 15.0, -20},
   { -3.2, 15.0, -20},
   { -2.6, 15.0, -20},
   { -2.0, 15.0, -20},
   { -1.4, 15.0, -20},
   { -0.8, 15.0, -20},
   { -0.2, 15.0, -20},
   {  0.4, 15.0, -20},
   {  1.0, 15.0, -20},
   {  1.6, 15.0, -20},
   {  2.2, 15.0, -20},
   {  2.8, 15.0, -20},
   {  3.4, 15.0, -20},
   
   {  4.0, 15.0, -20},
   {  3.7, 14.5, -20},
   {  3.4, 14.0, -20},
   {  3.1, 13.5, -20},
   {  2.8, 13.0, -20},
   {  2.5, 12.5, -20},
   {  2.2, 12.0, -20},
   {  1.9, 11.5, -20},
   {  1.6, 11.0, -20},
   {  1.3, 10.5, -20},
   {  1.0, 10.0, -20},
   {  0.7,  9.5, -20},
   {  0.4,  9.0, -20},
   {  0.1,  8.5, -20},
   { -0.2,  8.0, -20},
   { -0.5,  7.5, -20},
   { -0.8,  7.0, -20},
   { -1.1,  6.5, -20},
   { -1.4,  6.0, -20},
   { -1.7,  5.5, -20},
   { -2.0,  5.0, -20},
   { -2.3,  4.5, -20},
   { -2.6,  4.0, -20},
   { -2.9,  3.5, -20},
   { -3.2,  3.0, -20},
   { -3.5,  2.5, -20},
   { -3.8,  2.0, -20},
   { -4.1,  1.5, -20},
   { -4.4,  1.0, -20},
   { -4.7,  0.5, -20},
   { -5.0,  0.0, -20},

};

std::vector<Triangle> triangles =
{
   {{  5.0, 15.0, -20},
    { 14.0,  0.0, -20},
    { -4.0,  0.0, -20},  0, 91},

   {{ -5.0,  0.0, -20},
    {-14.0, 15.0, -20},
    {  4.0, 15.0, -20},  91, 91}
};

CRGB* leds;

void loop();

int main()
{
   std::vector<gfx::Config::View> views =
     {
     // x     y    z   FOV  horz vert
       {0,    8,   10,  45,    0,    0}  // front
     };
   leds = new CRGB[led_coords.size()];
   gfx::Gfx gfx(led_coords,
                      triangles,
                      gfx::Config().views(views));
   
   CRGB* col = leds;
   for (LED& led: led_coords)
   {
      led.color = col++;
   }
   
   do {
      usleep(30000);
      loop();
   } while(gfx.draw());
   
   delete[] leds;
   
   return 0;
}

void loop()
{
   static uint8_t hue = 0;
   static uint8_t white_led = 0;
   if (white_led < led_coords.size()/2)
   {
      fill_rainbow(leds + led_coords.size()/2, led_coords.size()/2, hue++, 3);
      fill_solid(leds, led_coords.size()/2, CRGB(20,20,20));
   }
   else
   {
      fill_rainbow(leds, led_coords.size()/2, hue++, 3);
      fill_solid(leds + led_coords.size()/2, led_coords.size()/2, CRGB(20,20,20));
   }
   leds[white_led] = CRGB::White;
   white_led = (white_led+1) % led_coords.size();
}
